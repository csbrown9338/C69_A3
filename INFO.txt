Colleen Brown
brownc50

VERY IMPORTANT: don't create a link, then a directory right after please

General issues I had was wrapping my head around the structure. 
It took me about a week to somewhat grasp how the inodes and blocks interact with each other, and that the ext2_dir_entry_2 structures were interpreted
by the blocks at different offsets (depending on rec_len), and that specifically, only inodes that represent directories have these specific structures
in their blocks to begin with.
It also took me a while to realize that the pointers in the superblock, block group, and inode structures (to stuff like the inode table, or the bitmaps)
work like indices and you have to index through the blocks to find its address.

Aside from my inability to grasp the structure in a timely manner (and by consequence, delaying the actual coding), the majority of the issues I encountered
were related to the pickiness of the addresses (i.e. getting the address to the exact byte), which makes sense considering we are meant to be working with
memory. However, it has hindered my progress with several of the commands since it's difficult to pinpoint where in the code it failed to return the desired
address, and how the address was shifted in any way.


For all commands, functionalities (including helpers) I have completed:
    - The checks for the arguments
    - Checking the validity of a path
    - Checking if an inode points to a dir or not
    - Retrieving information from the superblock, block group, and inodes
    - Parsing through and changing the bitmaps

Things I'm not sure worked properly:
    - Extracting the ext2_dir_entry_2 structure from the blocks given the inode, block index, and position
        Every time, it would seem to overwrite an existing structure when I added the new ext2_dir_entry_2 entry **** check findNewEntry


For the specific commands, I have completed the following:

ext2_ls:
    - Looping through the entries of a given directory and listing them
    - Printing out the name if it's not a directory
    - Displayed . and .. given the -a flag

ext2_cp:
    - Allocated an inode
    - Allocated up to 12 blocks

ext2_mkdir:
    - Allocating a new inode for directory
    - Allocating a place for the ext2_dir_entry_2 structure for the parent (..) after the new dir (.)

ext2_ln:
    - Not sure 

ext2_rm:
    - Nothing


Problems I had specific to each command (that's not address/overwritten structure related):

ext2_ls:

ext2_cp:

ext2_mkdir:

ext2_ln:


There are also some things that I don't know if they work for specific commands:

ext2_cp:
    - I'm not sure if I copied the information correctly, or in the right spot (specifically, for anything that requires less than 12 blocks)

ext2_mkdir:
    - Adding an ext2_dir_entry_2 into the destination (not properly, but it's stored in there)